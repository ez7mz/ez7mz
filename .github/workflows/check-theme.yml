name: Update README

on:
  push:
    branches:
      - output

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Determine GitHub theme
      id: theme
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          THEME=$(curl -sH "Accept: application/vnd.github.v3.diff" https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} | grep -q 'data-color-mode="dark"' && echo "dark" || echo "light")
        else
          THEME=${{ github.event.client_payload.color_mode }}
        fi
        echo "Theme: $THEME"
        echo "::set-output name=theme::$THEME"

    - name: Checkout the 'output' branch
      run: |
        git fetch origin output:output
        git checkout output
      if: steps.theme.outputs.theme == 'dark'  # Only checkout 'output' if the theme is dark

    - name: Copy SVG files
      run: |
        cp github-snake-dark.svg github-snake.svg
      working-directory: ./  # Update the path to your SVG files

    - name: Commit changes
      run: |
        git config user.name "ez7mz"
        git config user.email "mesrarhamza48@gmail.com"
        git add github-snake.svg
        git commit -m "Update logo based on GitHub theme"
        git push origin output  # Push changes to the 'output' branch
      if: steps.theme.outputs.theme == 'dark'  # Only commit and push changes if the theme is dark

    - name: Return to the default branch
      run: |
        git checkout ${{ github.ref }}
      if: steps.theme.outputs.theme == 'dark'  # Only return to the default branch if the theme is dark

    - name: Refresh GitHub Pages (if applicable)
      if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        curl -X POST https://api.github.com/repos/${{ github.repository }}/pages/builds
        echo "Triggered GitHub Pages rebuild."
